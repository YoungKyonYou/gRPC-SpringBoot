plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

bootJar.enabled = false

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

subprojects { // 모든 하위 모듈들에 이 설정을 적용합니다.
    group 'com.example'
    version '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'

    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'


    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }


    dependencies {
        implementation "io.grpc:grpc-netty-shaded:1.60.0"
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation "io.grpc:grpc-protobuf:1.60.0"
        testImplementation 'io.grpc:grpc-testing:1.58.0'
        implementation 'net.devh:grpc-client-spring-boot-starter:3.1.0.RELEASE'

       // developmentOnly 'org.springframework.boot:spring-boot-devtools'
        runtimeOnly 'com.h2database:h2'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }

    tasks.named('test') {
        useJUnitPlatform()
    }

    project(':proto') {
        // proto 모듈에 필요한 추가 설정이 있으면 여기에 작성하세요
    }

    project(':user-service') {
        // user-service 모듈에 필요한 추가 설정이 있으면 여기에 작성하세요
    }

    project(':aggregator-service') {
        // aggregator-service 모듈에 필요한 추가 설정이 있으면 여기에 작성하세요
    }




}


